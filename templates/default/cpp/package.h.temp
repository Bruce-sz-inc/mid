{{context.AutoGenDeclaration}}

{{- context.Extension "file_head" .}}

{{- context.Extension "before_import" .}}
#include <string>
#include <vector>
#include <array>
#include <map>
#include <unordered_map>
{{- context.Extension "after_import" .}}

{{- define "T_const"}}
{{range $decl := .}}
{{- context.Extension "before_const" $decl}}
{{- context.Extension "const_front" $decl}}
{{$decl.Doc}}{{range $field := $decl.Consts}}const int {{$field.Name}} = {{$field.ValueString}};{{$field.Comment}}
{{- context.Extension "const_back" $decl}}
{{end}}
{{- context.Extension "after_const" $decl}}
{{end}}
{{end}}

{{- define "T_enum"}}
{{- $type := .Name}}
{{- context.Extension "before_enum" .}}
{{.Doc}}enum {{$type}} {
	{{- context.Extension "enum_front" .}}
	{{range $field := .Fields}}
		{{- $field.Name}} = {{$field.Value}},{{$field.Comment}}
	{{end}}
	{{- context.Extension "enum_back" .}}
};
{{- context.Extension "after_enum" .}}
{{end}}

{{- define "T_struct"}}
{{- $type := .Name}}
{{- context.Extension "before_struct" .}}
{{- $extends := .BuildExtends context}}
{{.Doc}}struct {{$type}}{{if ne (len $extends) 0}}: public {{joinStrings " " $extends}}{{end}} {
	{{- context.Extension "struct_front" .}}
	{{range $field := .Fields}}
		{{- context.BuildType $field.Type}} {{$field.Name}};{{$field.Comment}}
	{{end}}
	{{- context.Extension "struct_back" .}}
};
{{- context.Extension "after_struct" .}}
{{end}}

{{- define "T_protocol"}}
{{- $type := .Name}}
{{- context.Extension "before_protocol" .}}
{{- $extends := .BuildExtends context}}
{{.Doc}}struct {{$type}}{{if ne (len $extends) 0}}: public {{$extends | join " "}}{{end}} {
	{{- context.Extension "protocol_front" .}}
	{{range $field := .Fields}}
		{{- context.BuildType $field.Type}} {{$field.Name}};{{$field.Comment}}
	{{end}}
	{{- context.Extension "protocol_back" .}}
};
{{- context.Extension "after_protocol" .}}
{{end}}

{{- define "T_service"}}
{{- $type := .Name}}
{{- context.Extension "before_service" .}}
{{- $extends := .BuildExtends context}}
{{.Doc}}class {{$type}}{{if ne (len $extends) 0}}: public {{$extends | join " "}}{{end}} {
	{{- context.Extension "service_front" .}}
	{{range $field := .Fields}}
		{{- $strs := splitN "(" 2 (context.BuildType $field.Type)}}
		{{- if true}} virtual {{stringAt $strs 0}} {{$field.Name}} ({{stringAt $strs 1}} = 0;{{$field.Comment}}{{end}}
	{{end}}
	{{- context.Extension "service_back" .}}
};
{{- context.Extension "after_service" .}}
{{end}}

namespace {{.Name}} {
{{.GenerateDeclsBySubTemplates}}
} // end namespace {{.Name}}

{{context.Extension "file_end" .}}
